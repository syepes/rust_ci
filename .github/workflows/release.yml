name: release

on:
  push:
    tags:
      - "v*.*.*"
env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: ${{ matrix.toolchain }} / ${{ matrix.triple.target }}
    runs-on: ${{ matrix.triple.os }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: [nightly]
        triple:
          #- {os: "ubuntu-latest", target: "x86_64-unknown-linux-musl", cross: false}
          - {os: "ubuntu-latest", target: "x86_64-unknown-linux-gnu", cross: false}
          # - {os: "ubuntu-latest", target: "armv7-unknown-linux-gnueabihf", cross: true}
          - {os: "ubuntu-latest", target: "aarch64-unknown-linux-gnu", cross: true}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build project
        run: cargo build --release --locked

      - name: Bump version and push tag/create release point
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
        id: bump_version

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/rust_ci
          asset_name: linux-${{ matrix.triple.target }}
          tag: ${{ steps.bump_version.outputs.new_tag }}
          overwrite: true

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/rust_ci
        asset_name: linux-${{ matrix.triple.target }}
        tag: ${{ steps.bump_version.outputs.new_tag }}
        overwrite: true
        body: "This is my release text"



      # - name: Install toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     profile: minimal
      #     toolchain: ${{ matrix.toolchain }}
      #     target: ${{ matrix.triple.target }}
      #     override: true
      # - name: Fetch
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: fetch
      # - name: Build
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: build
      #     args: --target=${{ matrix.triple.target }} --release --verbose
      #     use-cross: ${{ matrix.triple.cross }}
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1
      #   with:
      #     platforms: linux/amd64,linux/arm/v7,linux/arm64
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1
      # - name: Login to DockerHub
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Display structure of downloaded files
      #   run: du -a --exclude='.git*'
      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     builder: ${{ steps.buildx.outputs.name }}
      #     context: .
      #     file: ./Dockerfile
      #     build-args: |
      #       arch=${{ matrix.triple.target }}
      #     platforms: linux/amd64,linux/arm/v7,linux/arm64
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/rust_ci:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new
      # # Temp fix
      # # https://github.com/docker/build-push-action/issues/252
      # # https://github.com/moby/buildkit/issues/1896
      # - name: Move cache
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
